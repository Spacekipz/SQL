
/*How many orders were in January? */
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

/* How many of the January orders were for an iphone? */
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND Product = 'iPhone'
AND orderID <> 'Order ID';

/* Select the customer account numbers for all the orders that were placed in February */
SELECT distinct acctnum
FROM BIT_DB.customers cust

INNER JOIN BIT_DB.FebSales
ON cust.order_id = FebSales.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID';



/*Select the customer account numbers for all the orders that were placed in May for all Macbook Pro Laptops */
SELECT distinct acctnum
FROM BIT_DB.customers cust

INNER JOIN BIT_DB.MaySales
ON cust.order_id = MaySales.orderID
WHERE Product = 'Macbook Pro Laptop'
AND length(orderID) = 6
AND orderID <> 'Order ID';

/*Which product was the cheapest one sold in January? What was the price?*/
SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE price in (SELECT MIN(price) FROM BIT_DB.JanSales);

/*What is the total revenue for each product sold in January? */
SELECT SUM(quantity)*price as revenue, Product
FROM BIT_DB.JanSales
GROUP BY product;

/*Which products were sold in February at 548 Lincoln St, Seattle, WA 98101? How many of each were sold and what was the total revenue?*/
SELECT Product, quantity, SUM(quantity)*price as revenue, location
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101';

/* What product brought in the most revenue for April?*/
SELECT distinct  SUM(quantity)*price as revenue, Product
FROM BIT_DB.AprSales
ORDER BY revenue desc
LIMIT 1;

/* How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers? */
SELECT 
Count (distinct cust.acctnum), 
AVG(quantity*price) as avg_spent
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderID = cust.order_ID
WHERE length(orderID) = 6
AND Feb.quantity > 2
AND orderID <> 'Order ID'
ORDER by avg_spent desc
LIMIT 2;

/* What customers bought Iphones and Macbook Pro Laptops in May? */
SELECT distinct acctnum,
product,
quantity,
SUM(quantity)*price as total_spent
FROM BIT_DB.customers cust
LEFT JOIN BIT_DB.MaySales May
ON cust.order_id = May.orderID
WHERE length(orderID) = 6
AND May.Product = 'iPhone'
AND May.Product = 'Macbook Pro Laptop'
AND orderID <> 'Order ID'
ORDER by total_spent desc
LIMIT 2;

/*Filtering by dates examples in Febrauary Sales table*/
/*#1*/
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

/*#2*/
SELECT location 
FROM BIT_DB.FebSales 
WHERE orderdate = '02/19/19 01:35';

/*#3*/
SELECT SUM(quantity)
FROM BIT_DB.FebSales
WHERE orderdate like '02/18/19%';

/*List all the products sold in Los Angeles in February, and include how many of each were sold.*/
SELECT Product, 
SUM(quantity),
location
FROM Bit_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP by Product;

/*List all the products sold in New York City in May, and include how many of each were sold. */
SELECT Product,
SUM(quantity),
location
FROM BIT_DB.MaySales
WHERE location like '%New York City%'
GROUP by Product;

/* Which locations in New York received at least 3 orders in January, and how many orders did they each receive? */
SELECT distinct JanSales.location, COUNT(JanSales.orderID) AS total_orders, JanSales.orderID
FROM BIT_DB.JanSales
WHERE location LIKE "%NY%"
AND length(orderid) = 6 
AND orderid <> 'Order ID'
GROUP by JanSales.location
HAVING SUM(JanSales.Quantity) >=3;

/* How many of each type of headphone were sold in February? */
SELECT FebSales.Product, COUNT(FebSales.Quantity) AS total_sold
FROM BIT_DB.FebSales
WHERE Product LIKE "%Headphones%"
GROUP by FebSales.Product;

/* What was the average amount spent per account in February? */
SELECT SUM(Quantity * price) / COUNT(customers.acctnum) as AVG_Spent_Per_ACCT
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
ON FebSales.orderID = customers.order_id
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

/* What was the average quantity of products purchased per account in February? */
SELECT SUM(Quantity)/COUNT(customers.acctnum) as AVG_Quantity_Purchased
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers 
ON FebSales.orderID = customers.order_id
WHERE length(FebSales.orderid) = 6
AND FebSales.orderid <> 'Order ID';

/* Which product brought in the most revenue in January and how much revenue did it bring in total? */
SELECT Product,
SUM(Quantity*price) AS total_revenue
FROM BIT_DB.JanSales
GROUP BY Product
ORDER by SUM(Quantity * price) desc;

/* What products in May are priced between $500-$1000? */
SELECT Product, price
FROM BIT_DB.MaySales
WHERE price BETWEEN 500 AND 1000
GROUP BY Product;

/* Which customers have bought products that sell for over $500 in New York during the month of April? */
SELECT order_id, Product, price, location
FROM BIT_DB.customers
LEFT JOIN BIT_DB.JanSales
ON customers.order_id = JanSales.orderID
WHERE location = '%NY%'
AND price > 500
AND length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY Product;

/* Show the customer sales in February that are located in New York, Texas with a total purchase of $1200 or more? */
SELECT order_id, SUM(quantity * price) as total_purchase, location
FROM BIT_DB.customers
LEFT JOIN BIT_DB.FebSales
ON customers.order_id = FebSales.orderID
WHERE location LIKE '%NY%'
OR location LIKE '%TX%'
GROUP BY location
HAVING total_purchase >= 1200;

/* Create a query that shows items from February that were going for $100 and up? */
SELECT fs.orderID,
fs.Product,
fs.price AS fs_price,
fs.quantity
FROM FebSales fs
GROUP BY fs.orderID
HAVING fs.price IN (
    SELECT fs.price 
        FROM FebSales
            WHERE fs.price >=100);
            
/* Create a query that shows monitors from February that were going for $300 and up? */
/* Using multiple subqueries in this query to filter my data search. */
SELECT fs.orderID,
fs.Product,
fs.price AS fs_price,
fs.quantity
FROM FebSales fs
GROUP BY fs.orderID
HAVING fs.price IN (
    SELECT fs.price 
        FROM FebSales
            WHERE fs.price >=300 AND 
                (SELECT fs.Product
                    FROM FebSales
                        WHERE fs.Product LIKE '%monitor%'));
                        
/* Create a query that shows laptops from April that were going for $1000 and up? */
/* Using subqueries to filter my data search */
SELECT apr.orderID,
apr.Product,
apr.price AS apr_price,
apr.quantity
FROM AprSales apr
GROUP BY apr.orderID
HAVING apr.price IN (
    SELECT apr.price 
        FROM AprSales
            WHERE apr.price >=1000 AND 
                (SELECT apr.Product
                    FROM AprSales
                        WHERE apr.Product LIKE '%laptop%'));
                                









